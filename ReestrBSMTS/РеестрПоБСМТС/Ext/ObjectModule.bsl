
Процедура Печать(Элемент = неопределено,Индикатор1=0,НадоГЗ=Ложь) Экспорт
	
	Перем ИДДанные, СистемаМониторинга;
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Очистить();
	
	Макет = ПолучитьМакет("РеестрПоБСМТС");
	Заголовок = Макет.ПолучитьОбласть("Заголовок");
	ТС = Макет.ПолучитьОбласть("ТС");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	Строка = Макет.ПолучитьОбласть("Детали");
	
	//Заголовок.Параметры.СсылкаНаОбъект = СсылкаНаОбъект;
	Заголовок.Параметры.ПериодОтчета = Строка(Формат(СсылкаНаОбъект.Дата,"ДФ=MMMM")) + " " + Строка(Формат(СсылкаНаОбъект.Дата,"ДФ=yyyy")) + " г.";
	Заголовок.Параметры.ДоговорНомер = СсылкаНаОбъект.Договор.Номер;
	Заголовок.Параметры.ДоговорДата = Формат(СсылкаНаОбъект.Договор.Дата,"ДФ=dd.MM.yyyy");
	ТабДок.Вывести(Заголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеестрУслугУслуги.ПутевойЛист КАК ПутевойЛист,
		|	ПРЕДСТАВЛЕНИЕ(РеестрУслугУслуги.ПутевойЛист),
		|	РеестрУслугУслуги.ТС КАК ТС,
		|	ПРЕДСТАВЛЕНИЕ(РеестрУслугУслуги.ТС),
		|	РеестрУслугУслуги.Пробег КАК ПробегРеестр,
		|	ксДанныеАтографа.Пробег КАК ПробегРегистр,
		|	РеестрУслугУслуги.ПутевойЛист.ДатаВыезда КАК ПЛДата,
		|	РеестрУслугУслуги.ПутевойЛист.Номер КАК ПЛНомер,
		|	ксДанныеАтографа.ЧасыРабВО КАК ЧасыРабВОРегистр,
		|	РеестрУслугУслуги.ПутевойЛист.ДатаВыезда КАК ДатаНач,
		|	ксДанныеАтографа.ХХ КАК ХХРегистр,
		|	ПРЕДСТАВЛЕНИЕ(РеестрУслугУслуги.Договор) Как Договор
		|ИЗ
		|	Документ.РеестрУслуг.Услуги КАК РеестрУслугУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ксДанныеАтографа КАК ксДанныеАтографа
		|		ПО РеестрУслугУслуги.ПутевойЛист = ксДанныеАтографа.ПутевойЛист
		|ГДЕ
		|	РеестрУслугУслуги.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТС,
		|	ПЛДата
		|ИТОГИ
		|	СУММА(ПробегРеестр),
		|	СУММА(ПробегРегистр),
		|	СУММА(ХХРегистр)
		|ПО
		|	ОБЩИЕ,
		|	ТС";
	
	Запрос.УстановитьПараметр("Ссылка",СсылкаНаОбъект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщийИтог.Следующий();
	
	СистемаМониторинга = Неопределено;
	Сообщить(ТекущаяДата());
	ВыборкаТС = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаТС.Следующий() Цикл
		ТС.Параметры.Заполнить(ВыборкаТС);
		ТС.Параметры.ГарНомер = ВыборкаТС.ТС.ГаражныйНомер;
		ТС.Параметры.ГосударственныйНомер = ВыборкаТС.ТС.ГосударственныйНомер;
		ТС.ОБласть(1,2,1,8).ЦветФона = WebЦвета.Желтый; //СветлоЖелтый
		Если Не ЗначениеЗаполнено(ВыборкаТС.ТС.ИДвСистемеНавигации)Тогда
			ТС.ОБласть(1,5,1,5).ЦветФона = WebЦвета.ЛососьСветлый;; 
		КонецЕсли;	
		ТабДок.Вывести(ТС, ВыборкаТС.Уровень());

		Выборка = ВыборкаТС.Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстОшибки = "";
			Стк =глСистемыМониторингаСервер.АвтоГРАФ5_ПолучитьДанныеДляПЛПоТС(Выборка.ПутевойЛист.ДатаВыезда, Выборка.ПутевойЛист.ДатаВозвращения, Выборка.ТС, ТекстОшибки, Выборка.ТС.СистемаМониторинга);
			СткПараметровБСМТС = Новый Структура("TotalDistance,AverageSpeed,MaxSpeed,MoveDuration,ParkDuration,Engine1Motohours,Engine1MHOnParks,Sensor100ON_dur");
			Если Стк = 1 Тогда
				Сообщить("По ТС г/н " + ВыборкаТС.ТС.ГаражныйНомер + " ошибка получения данных из БСМТС по пут. листу - " + Выборка.ПутевойЛистПредставление);
			Иначе
				ОбработатьПараметрыБСМТС(Стк.ПараметрыБСМТС,СткПараметровБСМТС);
			КонецЕсли;	
			Строка.Параметры.Заполнить(СткПараметровБСМТС);
			Строка.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(Строка);
		КонецЦикла;
	КонецЦикла;
	
	ОбластьПодвалТаблицы.Параметры.Заполнить(ВыборкаОбщийИтог);
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.Показать();
	Сообщить(ТекущаяДата());
	
	
КонецПроцедуры

Процедура ОбработатьПараметрыБСМТС(ПараметрыБСМТС,СткПараметровБСМТС)
	Для Каждого ХХХ Из СткПараметровБСМТС Цикл
		Если ПараметрыБСМТС.Получить(ХХХ.Ключ) = Неопределено Тогда
			СткПараметровБСМТС[ХХХ.Ключ] = "Нет параметра из БСМТС";
		Иначе
			СткПараметровБСМТС[ХХХ.Ключ] = ПараметрыБСМТС.Получить(ХХХ.Ключ);
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	

